AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: SAM Template for Kenya Law Gazette backend

Globals:
  Function:
    Timeout: 30
    MemorySize: 128
    Runtime: python3.10
    Tracing: Disabled

Resources:
  Api:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub
        - ${ResourceName} From Stack ${AWS::StackName}
        - ResourceName: Api
      StageName: Prod
      DefinitionBody:
        openapi: '3.0'
        info: {}
        paths:
          /readgazettes:
            post:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DownloadGazettesFunction.Arn}/invocations
              responses: {}
      EndpointConfiguration: REGIONAL
      TracingEnabled: true
      Cors:
        MaxAge: 5
  DownloadGazettesFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Queues gazzetes from a certain year for downloading
      CodeUri: src
      Handler: app.queue_gazettes_downloads
      Events:
        ApiPOSTreadgazettes:
          Type: Api
          Properties:
            Path: /readgazettes
            Method: POST
            RestApiId: !Ref Api
      Environment:
        Variables:
          GAZETTESBUCKET_BUCKET_NAME: !Ref GazettesBucket
          GAZETTESBUCKET_BUCKET_ARN: !GetAtt GazettesBucket.Arn
          PENDINGGAZETTESDOWNLOADQUEUE_QUEUE_NAME: !GetAtt PendingGazettesDownloadQueue.QueueName
          PENDINGGAZETTESDOWNLOADQUEUE_QUEUE_ARN: !GetAtt PendingGazettesDownloadQueue.Arn
          PENDINGGAZETTESDOWNLOADQUEUE_QUEUE_URL: !Ref PendingGazettesDownloadQueue
      Policies:
        - SQSSendMessagePolicy:
            QueueName: !GetAtt PendingGazettesDownloadQueue.QueueName
        - S3ReadPolicy:
            BucketName: !Ref GazettesBucket
      Layers:
        - !Ref WebLayer
  DownloadGazettesFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName: !Sub /aws/lambda/${DownloadGazettesFunction}
      RetentionInDays: 30
  GazettesBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-gazettesb-${AWS::AccountId}
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: alias/aws/s3
      PublicAccessBlockConfiguration:
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
  GazettesBucketBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref GazettesBucket
      PolicyDocument:
        Id: RequireEncryptionInTransit
        Version: '2012-10-17'
        Statement:
          - Principal: '*'
            Action: '*'
            Effect: Deny
            Resource:
              - !GetAtt GazettesBucket.Arn
              - !Sub ${GazettesBucket.Arn}/*
            Condition:
              Bool:
                aws:SecureTransport: 'false'
  PendingGazettesDownloadQueue:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: 345600
  DownloadGazetteFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Downloads a gazette from web and stores it in S3
      CodeUri: src
      Handler: app.download_gazette
      Environment:
        Variables:
          GAZETTESBUCKET_BUCKET_NAME: !Ref GazettesBucket
          GAZETTESBUCKET_BUCKET_ARN: !GetAtt GazettesBucket.Arn
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref GazettesBucket
      Events:
        PendingGazettesDownloadQueue:
          Type: SQS
          Properties:
            Queue: !GetAtt PendingGazettesDownloadQueue.Arn
            BatchSize: 1
      Layers:
        - !Ref WebLayer

  DownloadGazetteFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${DownloadGazetteFunction}
      RetentionInDays: 30
    DeletionPolicy: Retain
  WebLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      Description: requests and beatifulsoup dependencies
      LayerName: web-layer
      ContentUri: layers/web_layer
      RetentionPolicy: Delete
      CompatibleRuntimes:
        - python3.10
Outputs:
  ApiGatewayUrlStaging:
    Description: API Gateway URL for Staging stage
    Value: !Sub https://${Api}.execute-api.${AWS::Region}.amazonaws.com/Stage
  ApiGatewayUrlProduction:
    Description: API Gateway URL for Production stage
    Value: !Sub https://${Api}.execute-api.${AWS::Region}.amazonaws.com/Prod

  DownloadGazettesFunctionLambdaLogGroup:
    Description: Queue Gazettes loggroup
    Value: !Sub /aws/lambda/${DownloadGazettesFunction}

  DownloadGazetteFunctionLambdaLogGroup:
    Description: Gazette download loggroup
    Value: !Sub /aws/lambda/${DownloadGazetteFunction}